import { Component } from '../utils/pojo/common';
import { CatalystApp } from '../catalyst-app';
import { AuthorizedHttpClient } from '../utils/api-request';
import { Bucket } from './bucket';
import { TransferManager } from './transfer-manager';
export default class Stratus implements Component {
    requester: AuthorizedHttpClient;
    constructor(app: CatalystApp);
    getComponentName(): string;
    /**
     * List all buckets and it's meta in a project
     * @param bucketName name of the bucket.
     * @returns Array<Bucket>.
     */
    listBuckets(): Promise<Array<Bucket>>;
    /**
     * Checks the existence of a bucket and whether a user has permission to access the bucket.
     * @param bucketName name of the bucket.
     * @param throwErr throw an error if object doesn't exist.
     * @returns 'true' if bucket exist else return 'false'
     */
    headBucket(bucketName: string, throwErr?: boolean): Promise<boolean>;
    /**
     * Create bucket instance.
     * @param bucketName name of the bucket.
     * @returns Bucket.
     */
    bucket(bucketName: string): Bucket;
}
export { TransferManager };
